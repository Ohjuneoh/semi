userDao.insertUser=insert into helf_users \
					(user_id, user_password, user_name, user_email, user_tel, user_type,  gym_no) \
					values(?,?,?,?,?,?,?)
userDao.insertManager=insert into helf_users \
					(user_id, user_password, user_name, user_email, user_tel, user_type) \
					values(?,?,?,?,?,?)
trainerDao.insertTrainer=insert into helf_trainers \
						(trainer_no, user_id, trainer_position) \
						values(helf_trainers_seq.nextval,?,?)
userDao.getUserById=select * \
					from helf_users \
					where user_id = ?
userDao.getUserByEmail=select * \
					from helf_users \
					where user_email = ?
userDao.deleteUserById=delete from helf_users \
							 where user_id = ?
userDao.deleteTrainerById=delete from helf_trainers \
							 where user_id = ?
userDao.updateUser= update helf_users \
						set \
							user_password = ?, \
							user_name = ?, \
							user_tel = ?, \
							user_email = ?, \
							user_status = ?, \
							gym_no = ?, \
							user_update_date = sysdate \
						where user_id = ?
						
### public List<User> getUserByType(String type){...} //written by chaegyeong
userDao.getUserByType=select * \
					  from helf_users \
					  where user_type = ? 

### public List<User> getAllUsers(){...} // written by chaegyeong 					  
userDao.getAllUsers=select * \
					from ( select row_number() over (order by user_id desc) row_number, \
						   user_id, user_name, user_email, user_tel, user_type, user_create_date, \
						   user_update_date, user_status, gym_no \
						   from helf_users) \
					where row_number between ? and ? 

### public int totalPages(){...} // written by chaegyeong
userDao.totalPages=select count(*) as totalPages \
				   from helf_users 

### public List<User> getAllUserUsers(){...} // written by chaegyeong 					  
userDao.getAllUserUsers=select * \
					from ( select row_number() over (order by user_id desc) row_number, \
						   user_id, user_name, user_email, user_tel, user_type, user_create_date, \
						   user_update_date, user_status, gym_no \
						   from helf_users) \
					where row_number between ? and ? \
					and user_type= 'user'

### public int totalPagesUsers(){...} // written by chaegyeong
userDao.totalPagesUsers=select count(*) as totalPages \
				   		from helf_users 

### public int totalPagesUserTrainers(){...} // written by chaegyeong
userDao.totalPagesUserTrainers=select count(*) as UserTrainerstotalPages \
				   		from helf_users \
				   		where user_type = ? 
				   		
### public List<User> getAllTrainers(){...} // written by chaegyeong 					  
userDao.getAllTrainers=select * \
					   from ( \
					   select row_number() over (order by A.user_id desc) as row_number, \
	       						A.user_id, \
	       						A.user_name, \
	       						A.user_email, \
	       						A.user_tel, \
	       						A.user_type,\
	       						A.user_create_date,\
	       						A.user_status, \
	       						A.user_update_date, \
	       						A.gym_no, \
	       						B.trainer_no, \
	       						B.trainer_salary, \
	       						B.trainer_commission_pct, \
	       						B.trainer_position \
						from helf_users A \
						join helf_trainers B ON A.user_id = B.user_id \
						where A.user_type = 'trainer' \
						) \
						where row_number between ? and ?			

### public List<User> getUserByUserType(String id, int begin, int end){...} //written by yuri					  
userDao.getAllUserByUserType=select * \
						  from (select row_number() over(order by gym_no asc) row_number, \
						               user_id, user_password, user_name, user_email, user_tel, \
									   user_create_date, user_update_date, user_status, gym_no \
								from helf_users \
								where user_type = 'user') \
						   where row_number between ? and ? 
						   
### //written by yuri								
userDao.getTotalUserRows=select count(*) as cnt \
					 from helf_users \
					 where user_type = 'user' 
					 
### //written by yuri					 
userDao.getUserByUserTypeAndId=select * \
					  from helf_users \
					  where user_type = 'user' \
					  and user_id = ?
### //wrritten by juno					  
userDao.getMyUserListTotalRows=select count(*) as cnt \
								from helf_users A, helf_reservation B, helf_lesson C \
								where A.user_id = B.user_id \
								and B.lesson_no = C.lesson_no \
								and A.user_id = ? \
								and C.lesson_type = ?
### //wrritten by juno
userDao.getMyUserByTrainerIdLessonType=select * \
										from(select row_number() over(order by A.lesson_no desc) row_number, \
										A.lesson_no, A.lesson_name, A.lesson_type, A.lesson_time, A.lesson_status, \
										B.user_id, B.user_password, B.user_name, B.user_email, B.user_tel, B.user_create_date, \
										B.user_update_date, B.user_status, \
										C.reserve_no \
										from (select * \
										from helf_lesson \
										where   user_id = ? and lesson_type = ?) A, helf_users B, helf_reservation C \
										where A.lesson_no = C.lesson_no \
										and   B.user_id = C.user_id) \
										where row_number between ? and ?
### //wrritten by juno
userDao.getMyUserListByIdTotalRows=select count(*) as cnt \
								from helf_users A, helf_reservation B, helf_lesson C \
								where A.user_id = B.user_id \
								and B.lesson_no = C.lesson_no \
								and A.user_id = ?
### //wrritten by juno
userDao.getMyUserByTrainerId=select * \
								from(select row_number() over(order by A.lesson_no desc) row_number, \
								A.lesson_no, A.lesson_name, A.lesson_type, A.lesson_time, A.lesson_status, \
								B.user_id, B.user_password, B.user_name, B.user_email, B.user_tel, B.user_create_date, \
								B.user_update_date, B.user_status, \
								C.reserve_no \
								from (select * \
								from helf_lesson \
								where user_id = ?) A, helf_users B, helf_reservation C \
								where A.lesson_no = C.lesson_no \
								and   B.user_id = C.user_id) \
								where row_number between ? and ?
					  
					 
